<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
xmlns:mvc="http://www.springframework.org/schema/mvc"   
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
 http://www.springframework.org/schema/tx 
  	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
    http://www.springframework.org/schema/mvc 
    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd ">
    <!-- 配置数据源 -->
<!--     <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
    	<property name="url" value="jdbc:oracle:thin:@localhost:1521:orcl"></property>
    	<property name="driverClassName" value="oracle.jdbc.OracleDriver"></property>
    	<property name="username" value="scott"></property>
    	<property name="password" value="tiger"></property>
    </bean> -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
    	<property name="url" value="jdbc:mysql://127.0.0.1:3306/aaa"></property>
    	<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
    	<property name="username" value="root"></property>
    	<property name="password" value="root"></property>
    </bean>
    <context:component-scan base-package="com.aaa.dao,com.aaa.service"></context:component-scan>
	<!-- 配置sqlsessionfactory -->
	<bean id="sqlsessionfactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!-- 加载mybatis配置文件 -->
		<property name="configLocation" value="classpath:mybatis/mybatisConfig.xml" ></property>
		<!-- 加载所有的mapper映射文件 -->
		<property name="mapperLocations" value="classpath:com/aaa/mapper/*.xml"></property>
	</bean>
	<!-- 自动扫描mybatis接口，并将接口生成代理bean注入spring容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	<!-- dao接口在哪里 -->
		<property name="basePackage" value="com.aaa.dao"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlsessionfactory"></property>
	</bean>
	<!--定义目标对象-->
	<bean id="phoneBizImpl" class="com.aaa.aop.PhoneBizImpl"></bean>
	<!-- 日志切面类 -->
	<bean id="logAspect" class="com.aaa.aop.LogAspect"></bean>
	
	<!-- 定义事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 配置声明式事务 -->
	<tx:advice id="myadvice" transaction-manager="transactionManager">
		<tx:attributes>
		 <!-- 需要开启事务 -->
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="del*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="*" propagation="SUPPORTS" read-only="true"/>
		</tx:attributes>
	
	</tx:advice>
	<!-- <aop:config>
		<aop:pointcut expression="execution(public void com.aaa.aop.PhoneBizImpl.salePhone(..))" id="p1"/>
		<aop:aspect id="myacpect" ref="logAspect">
		    前置通知
			<aop:before method="beforeMethod" pointcut-ref="p1"/>
			后置通知
			<aop:after-returning method="xxxafterReturingMethod" pointcut-ref="p1"/>
			最终通知
			<aop:after method="xxxafterMethod" pointcut-ref="p1"/>
			异常通知
			<aop:after-throwing method="throwExceptionMethod" pointcut-ref="p1" throwing="e"/>
			环绕通知
			<aop:around method="aroundMethod" pointcut-ref="p1"/>
		</aop:aspect>
	</aop:config> -->
	<aop:config>
		<aop:pointcut expression="execution(* com.aaa.service.impl.*.*(..))" id="p3"/>
		<aop:advisor advice-ref="myadvice" pointcut-ref="p3" />
	</aop:config>
</beans>